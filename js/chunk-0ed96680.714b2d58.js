(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0ed96680"],{"3c64":function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"demo-restore"},[n("h2",[e._v("学习 Canvas: 绘制矩形")]),n("p",[e._v("在 Canvas 中，我们绘制矩形的方式有很多种")]),n("h3",[e._v("线段绘制法：")]),n("p",[e._v("我们可以通过四条线段，通过对边平行的原理来成为一个矩形。")]),n("canvas",{ref:"rectUsingLines",attrs:{width:"400",height:"400"},on:{mousedown:e.mousedownHandler,mousemove:e.mousemoveHandler,mouseup:e.mouseupHandler}}),n("hr"),n("h3",[e._v("使用 Canvas 提供的 API：")]),n("p",[e._v("由于矩形是非常基础的几何图形，Canvas 提供了下列几个 API，供我们绘制矩形")]),e._m(0),n("p",[e._v("填充的矩形：")]),n("canvas",{ref:"rectUsingFillRect",attrs:{width:"400",height:"400"},on:{mousedown:e.mousedownHandler,mousemove:e.mousemoveHandler,mouseup:e.mouseupHandler}}),n("hr"),n("p",[e._v("边框的矩形：")]),n("canvas",{ref:"rectUsingStrokeRect",attrs:{width:"400",height:"400"},on:{mousedown:e.mousedownHandler,mousemove:e.mousemoveHandler,mouseup:e.mouseupHandler}}),n("hr"),e._m(1),n("canvas",{ref:"rectUsingRectAPI",attrs:{width:"400",height:"700"},on:{mousedown:e.mousedownHandler,mousemove:e.mousemoveHandler,mouseup:e.mouseupHandler}})])},o=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("code",[e._v("ctx.fillRect(x, y, width, height)")]),e._v(" 绘制一个填充的矩形 ")]),n("li",[n("code",[e._v("ctx.strokeRect(x, y, width, height)")]),e._v(" 绘制一个矩形的边框 ")]),n("li",[n("code",[e._v("ctx.clearRect(x, y, width, height)")]),e._v(" 绘制一个透明填充的矩形，通常该 API 是用来做橡皮擦功能 ")]),n("li",[n("code",[e._v("ctx.rect(x, y, width, height)")]),e._v(" 这是一个通用的矩形方法，它配合 "),n("code",[e._v("ctx.fill()")]),e._v("效果等于 "),n("code",[e._v("ctx.fillRect")]),e._v("，如果配合 "),n("code",[e._v("ctx.stroke()")]),e._v("，就等于 "),n("code",[e._v("ctx.strokeRect")]),e._v("。 ")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("rect()")]),e._v("组合的方式 ")])}],s=(n("cb29"),n("2b0e")),i=s["a"].extend({data:function(){return{eraserEnabled:!1}},mounted:function(){this.drawAllCanvas()},methods:{drawAllCanvas:function(){this.drawRectUsingLines(),this.drawRectUsingFillRect(),this.drawRectUsingStrokeRect(),this.drawRectUsingRectAPI()},drawRectUsingLines:function(){var e=this.$refs.rectUsingLines.getContext("2d");if(!e)throw new Error("Context is not empty!");e.beginPath(),e.moveTo(100,100),e.lineTo(300,100),e.lineTo(300,300),e.lineTo(100,300),e.closePath(),e.stroke()},drawRectUsingFillRect:function(){var e=this.$refs.rectUsingFillRect.getContext("2d");if(!e)throw new Error("Context is not empty!");e.fillStyle="#9f9",e.fillRect(100,100,200,200)},drawRectUsingStrokeRect:function(){var e=this.$refs.rectUsingStrokeRect.getContext("2d");if(!e)throw new Error("Context is not empty!");e.strokeStyle="#f00",e.lineWidth=5,e.beginPath(),e.strokeRect(100,100,200,200)},drawRectUsingRectAPI:function(){var e=this.$refs.rectUsingRectAPI.getContext("2d");if(!e)throw new Error("Context is not empty!");e.fillStyle="#9f9",e.fillRect(100,100,200,200),e.strokeStyle="#f00",e.lineWidth=5,e.strokeRect(100,100,200,200),e.rect(100,400,200,200),e.fill(),e.stroke()},clearRectAsEraser:function(e){var t=e.currentTarget,n=t.getContext("2d");if(!n)throw new Error("Context is not empty!");n.clearRect(e.offsetX-5,e.offsetY-5,10,10)},mousedownHandler:function(e){this.eraserEnabled=!0},mousemoveHandler:function(e){this.eraserEnabled&&this.clearRectAsEraser(e)},mouseupHandler:function(e){this.eraserEnabled=!1}}}),c=i,a=n("2877"),l=Object(a["a"])(c,r,o,!1,null,null,null);t["default"]=l.exports},"81d5":function(e,t,n){"use strict";var r=n("7b0b"),o=n("23cb"),s=n("50c4");e.exports=function(e){var t=r(this),n=s(t.length),i=arguments.length,c=o(i>1?arguments[1]:void 0,n),a=i>2?arguments[2]:void 0,l=void 0===a?n:o(a,n);while(l>c)t[c++]=e;return t}},cb29:function(e,t,n){var r=n("23e7"),o=n("81d5"),s=n("44d2");r({target:"Array",proto:!0},{fill:o}),s("fill")}}]);
//# sourceMappingURL=chunk-0ed96680.714b2d58.js.map