{"version":3,"sources":["webpack:///./src/views/articles/canvas/chapterC03P02.vue"],"names":[],"mappings":"kHAAA,OAAe","file":"js/chunk-2d0a3481.190010ba.js","sourcesContent":["export default \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h2</span>&gt;</span>canvas - 图片处理<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h2</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">canvas</span> <span class=\\\"hljs-attr\\\">ref</span>=<span class=\\\"hljs-string\\\">&quot;canvas&quot;</span> <span class=\\\"hljs-attr\\\">:width</span>=<span class=\\\"hljs-string\\\">&quot;canvasSize.width&quot;</span> <span class=\\\"hljs-attr\\\">:height</span>=<span class=\\\"hljs-string\\\">&quot;canvasSize.height&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">canvas</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>色彩处理<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button-group</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;origin&#x27;&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;origin&#x27;)&quot;</span>&gt;</span>原图<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;invert&#x27;&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;invert&#x27;)&quot;</span>&gt;</span>反色<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;pseudo&#x27;&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;pseudo&#x27;)&quot;</span>&gt;</span>伪彩<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n        <span class=\\\"hljs-comment\\\">&lt;!-- eslint-disable-next-line max-len --&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;grayscale&#x27;&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;grayscale&#x27;)&quot;</span>&gt;</span>灰度<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button-group</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>滤镜处理<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button-group</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;removeRed&#x27;&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;removeRed&#x27;)&quot;</span>&gt;</span>去除红色通道<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span>\\n          <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;removeGreen&#x27;&quot;</span>\\n          @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;removeGreen&#x27;)&quot;</span>\\n        &gt;</span>去除绿色通道<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n        <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">q-button</span> <span class=\\\"hljs-attr\\\">:disabled</span>=<span class=\\\"hljs-string\\\">&quot;colorType === &#x27;removeBlue&#x27;&quot;</span> @<span class=\\\"hljs-attr\\\">click</span>=<span class=\\\"hljs-string\\\">&quot;onSwitchColor(&#x27;removeBlue&#x27;)&quot;</span>&gt;</span>去除蓝色通道<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button</span>&gt;</span>\\n      <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">q-button-group</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">lang</span>=<span class=\\\"hljs-string\\\">&quot;ts&quot;</span>&gt;</span><span class=\\\"language-javascript\\\">\\n<span class=\\\"hljs-comment\\\">/* eslint-disable no-plusplus */</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-title class_\\\">Vue</span> <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;vue&#x27;</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> lena <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;./assets/lena.jpeg&#x27;</span>;\\n\\ntype <span class=\\\"hljs-title class_\\\">ColorTypes</span> = <span class=\\\"hljs-string\\\">&#x27;origin&#x27;</span> |\\n  <span class=\\\"hljs-string\\\">&#x27;invert&#x27;</span> |\\n  <span class=\\\"hljs-string\\\">&#x27;pseudo&#x27;</span> |\\n  <span class=\\\"hljs-string\\\">&#x27;grayscale&#x27;</span> |\\n  <span class=\\\"hljs-string\\\">&#x27;removeRed&#x27;</span> |\\n  <span class=\\\"hljs-string\\\">&#x27;removeGreen&#x27;</span> |\\n  <span class=\\\"hljs-string\\\">&#x27;removeBlue&#x27;</span>\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> <span class=\\\"hljs-title class_\\\">Vue</span>.<span class=\\\"hljs-title function_\\\">extend</span>({\\n  <span class=\\\"hljs-title function_\\\">data</span>(<span class=\\\"hljs-params\\\"></span>) {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">canvasSize</span>: {\\n        <span class=\\\"hljs-attr\\\">width</span>: <span class=\\\"hljs-number\\\">400</span>,\\n        <span class=\\\"hljs-attr\\\">height</span>: <span class=\\\"hljs-number\\\">400</span>,\\n      },\\n      <span class=\\\"hljs-attr\\\">img</span>: <span class=\\\"hljs-literal\\\">null</span> <span class=\\\"hljs-keyword\\\">as</span> HTMLImageElement | <span class=\\\"hljs-literal\\\">null</span>,\\n      <span class=\\\"hljs-attr\\\">colorType</span>: <span class=\\\"hljs-string\\\">&#x27;origin&#x27;</span> <span class=\\\"hljs-keyword\\\">as</span> <span class=\\\"hljs-title class_\\\">ColorTypes</span>,\\n    };\\n  },\\n  <span class=\\\"hljs-title function_\\\">mounted</span>(<span class=\\\"hljs-params\\\"></span>) {\\n    <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">loadImage</span>(lena).<span class=\\\"hljs-title function_\\\">then</span>(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">img</span>) =&gt;</span> {\\n      <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">img</span> = img;\\n      <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">onSwitchColor</span>(<span class=\\\"hljs-string\\\">&#x27;origin&#x27;</span>, <span class=\\\"hljs-literal\\\">true</span>);\\n    });\\n  },\\n  <span class=\\\"hljs-attr\\\">methods</span>: {\\n    <span class=\\\"hljs-title function_\\\">loadImage</span>(<span class=\\\"hljs-params\\\">src: string</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> img = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-title class_\\\">Image</span>();\\n      <span class=\\\"hljs-keyword\\\">const</span> { width, height } = <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">canvasSize</span>;\\n      img.<span class=\\\"hljs-property\\\">src</span> = src;\\n      img.<span class=\\\"hljs-property\\\">width</span> = width;\\n      img.<span class=\\\"hljs-property\\\">height</span> = height;\\n      img.<span class=\\\"hljs-property\\\">crossOrigin</span> = <span class=\\\"hljs-string\\\">&#x27;cors&#x27;</span>;\\n      <span class=\\\"hljs-keyword\\\">return</span> <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-title class_\\\">Promise</span>&lt;HTMLImageElement&gt;(<span class=\\\"hljs-function\\\">(<span class=\\\"hljs-params\\\">resolve, reject</span>) =&gt;</span> {\\n        img.<span class=\\\"hljs-property\\\">onload</span> = <span class=\\\"hljs-function\\\">() =&gt;</span> <span class=\\\"hljs-title function_\\\">resolve</span>(img);\\n        img.<span class=\\\"hljs-property\\\">onerror</span> = reject;\\n      });\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">onSwitchColor</span>(<span class=\\\"hljs-params\\\">colorType: ColorTypes, force = <span class=\\\"hljs-literal\\\">false</span></span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> { img } = <span class=\\\"hljs-variable language_\\\">this</span>;\\n      <span class=\\\"hljs-keyword\\\">if</span> (!force) {\\n        <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">colorType</span> === colorType) {\\n          <span class=\\\"hljs-keyword\\\">return</span>;\\n        }\\n      }\\n      <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">colorType</span> = colorType;\\n      <span class=\\\"hljs-keyword\\\">const</span> canvas = <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">$refs</span>.<span class=\\\"hljs-property\\\">canvas</span> <span class=\\\"hljs-keyword\\\">as</span> HTMLCanvasElement;\\n      <span class=\\\"hljs-keyword\\\">if</span> (!img) {\\n        <span class=\\\"hljs-keyword\\\">return</span>;\\n      }\\n      <span class=\\\"hljs-keyword\\\">switch</span> (colorType) {\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;origin&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawOriginImg</span>(canvas, img);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;invert&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawInvertImg</span>(canvas, img);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;pseudo&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawPseudoImg</span>(canvas, img);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;grayscale&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawGrayscaleImg</span>(canvas, img);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;removeRed&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawDoubleChannelImg</span>(canvas, img, <span class=\\\"hljs-number\\\">0</span>);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;removeGreen&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawDoubleChannelImg</span>(canvas, img, <span class=\\\"hljs-number\\\">1</span>);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-keyword\\\">case</span> <span class=\\\"hljs-string\\\">&#x27;removeBlue&#x27;</span>:\\n          <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawDoubleChannelImg</span>(canvas, img, <span class=\\\"hljs-number\\\">2</span>);\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n        <span class=\\\"hljs-attr\\\">default</span>:\\n          <span class=\\\"hljs-keyword\\\">break</span>;\\n      }\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawOriginImg</span>(<span class=\\\"hljs-params\\\">canvas: HTMLCanvasElement, img: HTMLImageElement</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = canvas.<span class=\\\"hljs-title function_\\\">getContext</span>(<span class=\\\"hljs-string\\\">&#x27;2d&#x27;</span>);\\n      <span class=\\\"hljs-keyword\\\">if</span> (ctx) {\\n        ctx.<span class=\\\"hljs-title function_\\\">drawImage</span>(img, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n      }\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawInvertImg</span>(<span class=\\\"hljs-params\\\">canvas: HTMLCanvasElement, img: HTMLImageElement</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = canvas.<span class=\\\"hljs-title function_\\\">getContext</span>(<span class=\\\"hljs-string\\\">&#x27;2d&#x27;</span>);\\n      <span class=\\\"hljs-keyword\\\">if</span> (ctx) {\\n        ctx.<span class=\\\"hljs-title function_\\\">drawImage</span>(img, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> imageData = ctx.<span class=\\\"hljs-title function_\\\">getImageData</span>(<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> len = imageData.<span class=\\\"hljs-property\\\">data</span>.<span class=\\\"hljs-property\\\">length</span>;\\n        <span class=\\\"hljs-keyword\\\">let</span> pointIndex = <span class=\\\"hljs-number\\\">0</span>;\\n        <span class=\\\"hljs-keyword\\\">while</span> (pointIndex &lt;= len) {\\n          <span class=\\\"hljs-keyword\\\">const</span> red = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex];\\n          <span class=\\\"hljs-keyword\\\">const</span> green = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">1</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> blue = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">2</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> alpha = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">3</span>];\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = <span class=\\\"hljs-number\\\">255</span> - red;\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = <span class=\\\"hljs-number\\\">255</span> - green;\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = <span class=\\\"hljs-number\\\">255</span> - blue;\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = alpha;\\n        }\\n        ctx.<span class=\\\"hljs-title function_\\\">putImageData</span>(imageData, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>);\\n      }\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawPseudoImg</span>(<span class=\\\"hljs-params\\\">canvas: HTMLCanvasElement, img: HTMLImageElement</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = canvas.<span class=\\\"hljs-title function_\\\">getContext</span>(<span class=\\\"hljs-string\\\">&#x27;2d&#x27;</span>);\\n      <span class=\\\"hljs-keyword\\\">if</span> (ctx) {\\n        ctx.<span class=\\\"hljs-title function_\\\">drawImage</span>(img, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> imageData = ctx.<span class=\\\"hljs-title function_\\\">getImageData</span>(<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> len = imageData.<span class=\\\"hljs-property\\\">data</span>.<span class=\\\"hljs-property\\\">length</span>;\\n        <span class=\\\"hljs-keyword\\\">let</span> pointIndex = <span class=\\\"hljs-number\\\">0</span>;\\n        <span class=\\\"hljs-keyword\\\">while</span> (pointIndex &lt;= len) {\\n          <span class=\\\"hljs-keyword\\\">const</span> red = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex];\\n          <span class=\\\"hljs-keyword\\\">const</span> green = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">1</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> blue = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">2</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> alpha = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">3</span>];\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = <span class=\\\"hljs-title class_\\\">Math</span>.<span class=\\\"hljs-title function_\\\">round</span>(<span class=\\\"hljs-number\\\">0.393</span> * red + <span class=\\\"hljs-number\\\">0.769</span> * green + <span class=\\\"hljs-number\\\">0.189</span> * blue);\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = <span class=\\\"hljs-title class_\\\">Math</span>.<span class=\\\"hljs-title function_\\\">round</span>(<span class=\\\"hljs-number\\\">0.349</span> * red + <span class=\\\"hljs-number\\\">0.686</span> * green + <span class=\\\"hljs-number\\\">0.168</span> * blue);\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = <span class=\\\"hljs-title class_\\\">Math</span>.<span class=\\\"hljs-title function_\\\">round</span>(<span class=\\\"hljs-number\\\">0.272</span> * red + <span class=\\\"hljs-number\\\">0.534</span> * green + <span class=\\\"hljs-number\\\">0.131</span> * blue);\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = alpha;\\n        }\\n        ctx.<span class=\\\"hljs-title function_\\\">putImageData</span>(imageData, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>);\\n      }\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawGrayscaleImg</span>(<span class=\\\"hljs-params\\\">canvas: HTMLCanvasElement, img: HTMLImageElement</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = canvas.<span class=\\\"hljs-title function_\\\">getContext</span>(<span class=\\\"hljs-string\\\">&#x27;2d&#x27;</span>);\\n      <span class=\\\"hljs-keyword\\\">if</span> (ctx) {\\n        ctx.<span class=\\\"hljs-title function_\\\">drawImage</span>(img, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> imageData = ctx.<span class=\\\"hljs-title function_\\\">getImageData</span>(<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> len = imageData.<span class=\\\"hljs-property\\\">data</span>.<span class=\\\"hljs-property\\\">length</span>;\\n        <span class=\\\"hljs-keyword\\\">let</span> pointIndex = <span class=\\\"hljs-number\\\">0</span>;\\n        <span class=\\\"hljs-keyword\\\">while</span> (pointIndex &lt;= len) {\\n          <span class=\\\"hljs-keyword\\\">const</span> red = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex];\\n          <span class=\\\"hljs-keyword\\\">const</span> green = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">1</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> blue = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">2</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> alpha = imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + <span class=\\\"hljs-number\\\">3</span>];\\n          <span class=\\\"hljs-keyword\\\">const</span> avg = <span class=\\\"hljs-title class_\\\">Math</span>.<span class=\\\"hljs-title function_\\\">round</span>((red + green + blue) / <span class=\\\"hljs-number\\\">3</span>);\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = avg;\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = avg;\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = avg;\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex++] = alpha;\\n        }\\n        ctx.<span class=\\\"hljs-title function_\\\">putImageData</span>(imageData, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>);\\n      }\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawDoubleChannelImg</span>(<span class=\\\"hljs-params\\\">canvas: HTMLCanvasElement, img: HTMLImageElement, channel: number</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = canvas.<span class=\\\"hljs-title function_\\\">getContext</span>(<span class=\\\"hljs-string\\\">&#x27;2d&#x27;</span>);\\n      <span class=\\\"hljs-keyword\\\">if</span> (ctx) {\\n        ctx.<span class=\\\"hljs-title function_\\\">drawImage</span>(img, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> imageData = ctx.<span class=\\\"hljs-title function_\\\">getImageData</span>(<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, canvas.<span class=\\\"hljs-property\\\">width</span>, canvas.<span class=\\\"hljs-property\\\">height</span>);\\n        <span class=\\\"hljs-keyword\\\">const</span> len = imageData.<span class=\\\"hljs-property\\\">data</span>.<span class=\\\"hljs-property\\\">length</span>;\\n        <span class=\\\"hljs-keyword\\\">let</span> pointIndex = <span class=\\\"hljs-number\\\">0</span>;\\n        <span class=\\\"hljs-keyword\\\">while</span> (pointIndex &lt;= len) {\\n          imageData.<span class=\\\"hljs-property\\\">data</span>[pointIndex + channel] = <span class=\\\"hljs-number\\\">0</span>;\\n          pointIndex += <span class=\\\"hljs-number\\\">4</span>;\\n        }\\n        ctx.<span class=\\\"hljs-title function_\\\">putImageData</span>(imageData, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>);\\n      }\\n    },\\n  },\\n});\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">style</span> <span class=\\\"hljs-attr\\\">scoped</span> <span class=\\\"hljs-attr\\\">lang</span>=<span class=\\\"hljs-string\\\">&quot;less&quot;</span>&gt;</span><span class=\\\"language-css\\\">\\n<span class=\\\"hljs-selector-class\\\">.canvas-demo-table</span> {\\n  <span class=\\\"hljs-attribute\\\">width</span>: <span class=\\\"hljs-number\\\">100%</span>;\\n  <span class=\\\"hljs-attribute\\\">text-align</span>: center;\\n}\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">style</span>&gt;</span>\\n\""],"sourceRoot":""}