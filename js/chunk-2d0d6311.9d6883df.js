(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d6311"],{7200:function(s,a,n){"use strict";n.r(a),a["default"]='<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;demo-whiteboard&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;400&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;400&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;canvas&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;actions&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;brushHandler&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;{ active: !eraserEnabled }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#icon-Pencil&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;eraserHandler&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;{ active: eraserEnabled }&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#icon-eraser&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;downloadHandler&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#icon-save&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clearHandler&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#icon-clear&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;sizes&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;size thin action-item&quot;</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;{ active: lineWidth === 3 }&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;lineWidth = 3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;size thick action-item&quot;</span>\n        <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;{ active: lineWidth === 6 }&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;lineWidth = 6&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;colors&quot;</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>\n        <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;color in colorList&quot;</span>\n        <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;color&quot;</span>\n        <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;color action-item&quot;</span>\n        <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;{\n          active: color === strokeStyle\n        }&quot;</span>\n        <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;{ backgroundColor: color }&quot;</span>\n        @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;setColor(color)&quot;</span>\n      &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n<span class="hljs-comment">/* eslint-disable no-param-reassign */</span>\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>({\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      <span class="hljs-attr">eraserEnabled</span>: <span class="hljs-literal">false</span>,\n      <span class="hljs-attr">lineWidth</span>: <span class="hljs-number">3</span>,\n      <span class="hljs-attr">strokeStyle</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n      <span class="hljs-attr">canvas</span>: <span class="hljs-literal">null</span> <span class="hljs-keyword">as</span> HTMLCanvasElement | <span class="hljs-literal">null</span>,\n      <span class="hljs-attr">ctx</span>: <span class="hljs-literal">null</span> <span class="hljs-keyword">as</span> <span class="hljs-title class_">CanvasRenderingContext</span>2D | <span class="hljs-literal">null</span>,\n      <span class="hljs-attr">colorList</span>: [<span class="hljs-string">&#x27;#000000&#x27;</span>, <span class="hljs-string">&#x27;#70FF56&#x27;</span>, <span class="hljs-string">&#x27;#FB6164&#x27;</span>, <span class="hljs-string">&#x27;#FFE931&#x27;</span>, <span class="hljs-string">&#x27;#83FFB6&#x27;</span>, <span class="hljs-string">&#x27;#FF7520&#x27;</span>],\n    };\n  },\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> { canvas, ctx } = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getCanvasAndContext</span>();\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">initCanvasBackground</span>(canvas, ctx);\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">disableScroll</span>();\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">registerUserEvents</span>(canvas, ctx);\n  },\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-title function_">getCanvasAndContext</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-keyword">const</span> canvas = <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">canvas</span> <span class="hljs-keyword">as</span> HTMLCanvasElement;\n      <span class="hljs-keyword">const</span> ctx = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&#x27;2d&#x27;</span>);\n      <span class="hljs-keyword">if</span> (!ctx) {\n        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;浏览器太非主流了吧&#x27;</span>);\n      }\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">canvas</span> = canvas;\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span> = ctx;\n      <span class="hljs-keyword">return</span> { canvas, ctx };\n    },\n\n    <span class="hljs-title function_">drawLine</span>(<span class="hljs-params">ctx: CanvasRenderingContext2D, x1: number, y1: number, x2: number, y2: number</span>) {\n      ctx.<span class="hljs-title function_">beginPath</span>();\n      ctx.<span class="hljs-title function_">moveTo</span>(x1, y1);\n      ctx.<span class="hljs-property">lineWidth</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">lineWidth</span> || <span class="hljs-number">3</span>;\n      ctx.<span class="hljs-title function_">lineTo</span>(x2, y2);\n      ctx.<span class="hljs-title function_">stroke</span>();\n      ctx.<span class="hljs-title function_">closePath</span>();\n    },\n\n    <span class="hljs-title function_">registerUserEvents</span>(<span class="hljs-params">canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D</span>) {\n      <span class="hljs-comment">// 鼠标操作</span>\n      <span class="hljs-keyword">let</span> enableDrag = <span class="hljs-literal">false</span>;\n      <span class="hljs-keyword">let</span> lastPoint = { <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">0</span> };\n      <span class="hljs-comment">// 特性检测</span>\n      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">ontouchstart</span> === <span class="hljs-literal">undefined</span>) {\n        <span class="hljs-comment">// 非触屏设备</span>\n        canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mousedown&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n          enableDrag = <span class="hljs-literal">true</span>;\n          <span class="hljs-keyword">const</span> x = e.<span class="hljs-property">offsetX</span>;\n          <span class="hljs-keyword">const</span> y = e.<span class="hljs-property">offsetY</span>;\n          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">eraserEnabled</span>) {\n            ctx.<span class="hljs-title function_">clearRect</span>(x - <span class="hljs-number">5</span>, y - <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>);\n          } <span class="hljs-keyword">else</span> {\n            <span class="hljs-comment">// 在按下时就要更新 lastPoint, 不然下一次点击会连接到上一条线的 lastPoint</span>\n            lastPoint = { x, y };\n          }\n        });\n        canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mousemove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n          <span class="hljs-keyword">if</span> (!enableDrag) { <span class="hljs-keyword">return</span>; }\n\n          <span class="hljs-keyword">const</span> x = e.<span class="hljs-property">offsetX</span>;\n          <span class="hljs-keyword">const</span> y = e.<span class="hljs-property">offsetY</span>;\n          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">eraserEnabled</span>) {\n            ctx.<span class="hljs-title function_">clearRect</span>(x - <span class="hljs-number">5</span>, y - <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>);\n          } <span class="hljs-keyword">else</span> {\n            <span class="hljs-keyword">const</span> newPoint = { x, y };\n            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawLine</span>(ctx, lastPoint.<span class="hljs-property">x</span>, lastPoint.<span class="hljs-property">y</span>, newPoint.<span class="hljs-property">x</span>, newPoint.<span class="hljs-property">y</span>);\n            lastPoint = newPoint;\n          }\n        });\n        canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;mouseup&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n          enableDrag = <span class="hljs-literal">false</span>;\n        });\n      } <span class="hljs-keyword">else</span> {\n        <span class="hljs-comment">// 触屏设备</span>\n        canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;touchstart&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n          enableDrag = <span class="hljs-literal">true</span>;\n          <span class="hljs-keyword">const</span> x = e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>;\n          <span class="hljs-keyword">const</span> y = e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span>;\n          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">eraserEnabled</span>) {\n            ctx.<span class="hljs-title function_">clearRect</span>(x - <span class="hljs-number">5</span>, y - <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>);\n          } <span class="hljs-keyword">else</span> {\n            <span class="hljs-comment">// 在按下时就要更新 lastPoint, 不然下一次点击会连接到上一条线的 lastPoint</span>\n            lastPoint = { x, y };\n          }\n        });\n        canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;touchmove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n          <span class="hljs-keyword">if</span> (!enableDrag) { <span class="hljs-keyword">return</span>; }\n\n          <span class="hljs-keyword">const</span> x = e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientX</span>;\n          <span class="hljs-keyword">const</span> y = e.<span class="hljs-property">touches</span>[<span class="hljs-number">0</span>].<span class="hljs-property">clientY</span>;\n          <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">eraserEnabled</span>) {\n            ctx.<span class="hljs-title function_">clearRect</span>(x - <span class="hljs-number">5</span>, y - <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>);\n          } <span class="hljs-keyword">else</span> {\n            <span class="hljs-keyword">const</span> newPoint = { x, y };\n            <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">drawLine</span>(ctx, lastPoint.<span class="hljs-property">x</span>, lastPoint.<span class="hljs-property">y</span>, newPoint.<span class="hljs-property">x</span>, newPoint.<span class="hljs-property">y</span>);\n            lastPoint = newPoint;\n          }\n        });\n        canvas.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;touchend&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n          enableDrag = <span class="hljs-literal">false</span>;\n        });\n      }\n    },\n\n    <span class="hljs-comment">// Save | Download image</span>\n    <span class="hljs-title function_">downloadImage</span>(<span class="hljs-params">data: string, filename = <span class="hljs-string">&#x27;untitled.jpeg&#x27;</span></span>) {\n      <span class="hljs-keyword">const</span> a = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;a&#x27;</span>);\n      a.<span class="hljs-property">href</span> = data;\n      a.<span class="hljs-property">download</span> = filename;\n      a.<span class="hljs-property">target</span> = <span class="hljs-string">&#x27;_blank&#x27;</span>;\n      <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a);\n      a.<span class="hljs-title function_">click</span>();\n    },\n\n    <span class="hljs-title function_">eraserHandler</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">eraserEnabled</span> = <span class="hljs-literal">true</span>;\n    },\n\n    <span class="hljs-title function_">brushHandler</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">eraserEnabled</span> = <span class="hljs-literal">false</span>;\n    },\n\n    <span class="hljs-title function_">clearHandler</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-keyword">const</span> { ctx, canvas } = <span class="hljs-variable language_">this</span>;\n      <span class="hljs-keyword">if</span> (!ctx || !canvas) { <span class="hljs-keyword">return</span>; }\n      ctx.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);\n    },\n\n    <span class="hljs-title function_">downloadHandler</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-keyword">const</span> { ctx, canvas } = <span class="hljs-variable language_">this</span>;\n      <span class="hljs-keyword">if</span> (!ctx || !canvas) { <span class="hljs-keyword">return</span>; }\n      <span class="hljs-keyword">const</span> dataURL = canvas.<span class="hljs-title function_">toDataURL</span>(<span class="hljs-string">&#x27;image/png&#x27;</span>);\n      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">downloadImage</span>(dataURL, <span class="hljs-string">&#x27;我的画-在线画板.png&#x27;</span>);\n    },\n\n    <span class="hljs-title function_">setColor</span>(<span class="hljs-params">color: string</span>) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">strokeStyle</span> = color;\n      <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>) {\n        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">changeCtxStrokeStyle</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">ctx</span>, color);\n      }\n    },\n\n    <span class="hljs-title function_">changeCtxStrokeStyle</span>(<span class="hljs-params">ctx: CanvasRenderingContext2D, color: string</span>) {\n      ctx.<span class="hljs-property">strokeStyle</span> = color;\n    },\n\n    <span class="hljs-title function_">initCanvasBackground</span>(<span class="hljs-params">canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D</span>) {\n      ctx.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&#x27;white&#x27;</span>;\n      ctx.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);\n    },\n\n    <span class="hljs-title function_">disableScroll</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;touchmove&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n        e.<span class="hljs-title function_">preventDefault</span>();\n      });\n    },\n  },\n});\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css">\n<span class="hljs-selector-class">.demo-whiteboard</span> {\n  <span class="hljs-attribute">position</span>: relative;\n\n  <span class="hljs-selector-tag">ul</span>,\n  <span class="hljs-selector-tag">li</span> {\n    <span class="hljs-attribute">list-style</span>: none;\n  }\n  <span class="hljs-selector-class">.colors</span> {\n    <span class="hljs-attribute">position</span>: fixed;\n    <span class="hljs-attribute">top</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">left</span>: <span class="hljs-number">23px</span>;\n  }\n  <span class="hljs-selector-class">.colors</span> &gt; <span class="hljs-selector-class">.color</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;\n    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;\n    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">3px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.3</span>);\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">12px</span> <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">transition</span>: all <span class="hljs-number">0.3s</span>;\n  }\n\n  <span class="hljs-selector-class">.action-item</span><span class="hljs-selector-class">.active</span> {\n    <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">6px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.9</span>);\n    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.2</span>);\n  }\n\n  <span class="hljs-selector-class">.sizes</span> {\n    <span class="hljs-attribute">position</span>: fixed;\n    <span class="hljs-attribute">right</span>: <span class="hljs-number">40px</span>;\n    <span class="hljs-attribute">top</span>: <span class="hljs-number">120px</span>;\n  }\n  <span class="hljs-selector-class">.sizes</span> &gt; <span class="hljs-selector-class">.size</span> {\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">15px</span> <span class="hljs-number">0</span>;\n  }\n  <span class="hljs-selector-class">.sizes</span> &gt; <span class="hljs-selector-class">.thin</span> {\n    <span class="hljs-attribute">border-top</span>: <span class="hljs-number">3px</span> solid black;\n  }\n  <span class="hljs-selector-class">.sizes</span> &gt; <span class="hljs-selector-class">.thick</span> {\n    <span class="hljs-attribute">border-top</span>: <span class="hljs-number">10px</span> solid black;\n  }\n\n  <span class="hljs-selector-class">.actions</span> {\n    <span class="hljs-attribute">position</span>: absolute;\n    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;\n    <span class="hljs-attribute">display</span>: flex;\n    <span class="hljs-attribute">justify-content</span>: center;\n  }\n\n  <span class="hljs-selector-class">.actions</span> <span class="hljs-selector-class">.icon</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">3em</span>;\n    <span class="hljs-attribute">height</span>: <span class="hljs-number">3em</span>;\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">1em</span>;\n    <span class="hljs-attribute">cursor</span>: pointer;\n\n    &amp;<span class="hljs-selector-class">.active</span> {\n      <span class="hljs-attribute">outline</span>: <span class="hljs-number">4px</span> solid <span class="hljs-number">#8000ff</span>;\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>\n'}}]);
//# sourceMappingURL=chunk-2d0d6311.9d6883df.js.map