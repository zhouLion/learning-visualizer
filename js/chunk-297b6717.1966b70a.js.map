{"version":3,"sources":["webpack:///./src/views/articles/canvas/chapterC03P02.vue?0fe9","webpack:///./src/views/articles/canvas/chapterC03P02.vue?fbbd","webpack:///./src/views/articles/canvas/chapterC03P02.vue?16ad","webpack:///./src/views/articles/canvas/chapterC03P02.vue?d953","webpack:///./src/views/articles/canvas/chapterC03P02.vue?b03a","webpack:///./src/views/articles/canvas/assets/lena.jpeg"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","ref","attrs","canvasSize","width","height","colorType","on","$event","onSwitchColor","staticRenderFns","extend","data","img","mounted","loadImage","then","methods","src","Image","crossOrigin","Promise","resolve","reject","onload","onerror","force","canvas","$refs","drawOriginImg","drawInvertImg","drawPseudoImg","drawGrayscaleImg","drawDoubleChannelImg","drawSingleChannelImg","ctx","getContext","drawImage","imageData","getImageData","len","length","pointIndex","red","green","blue","alpha","putImageData","Math","round","avg","channel","index","component","module","exports"],"mappings":"kHAAA,W,2CCAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,KAAK,CAACJ,EAAIM,GAAG,mBAAmBF,EAAG,SAAS,CAACG,IAAI,SAASC,MAAM,CAAC,MAAQR,EAAIS,WAAWC,MAAM,OAASV,EAAIS,WAAWE,UAAUP,EAAG,KAAK,CAACJ,EAAIM,GAAG,UAAUF,EAAG,MAAM,CAACA,EAAG,iBAAiB,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,WAAlBR,EAAIY,WAAwBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,aAAa,CAACf,EAAIM,GAAG,QAAQF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,WAAlBR,EAAIY,WAAwBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,aAAa,CAACf,EAAIM,GAAG,QAAQF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,WAAlBR,EAAIY,WAAwBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,aAAa,CAACf,EAAIM,GAAG,QAAQF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,cAAlBR,EAAIY,WAA2BC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,gBAAgB,CAACf,EAAIM,GAAG,SAAS,IAAI,GAAGF,EAAG,KAAK,CAACJ,EAAIM,GAAG,UAAUF,EAAG,MAAM,CAACA,EAAG,MAAM,CAACJ,EAAIM,GAAG,SAASF,EAAG,iBAAiB,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,cAAlBR,EAAIY,WAA2BC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,gBAAgB,CAACf,EAAIM,GAAG,YAAYF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,gBAAlBR,EAAIY,WAA6BC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,kBAAkB,CAACf,EAAIM,GAAG,YAAYF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,eAAlBR,EAAIY,WAA4BC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,iBAAiB,CAACf,EAAIM,GAAG,aAAa,GAAGF,EAAG,MAAM,CAACJ,EAAIM,GAAG,SAASF,EAAG,iBAAiB,CAACA,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,YAAlBR,EAAIY,WAAyBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,cAAc,CAACf,EAAIM,GAAG,aAAaF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,cAAlBR,EAAIY,WAA2BC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,gBAAgB,CAACf,EAAIM,GAAG,aAAaF,EAAG,WAAW,CAACI,MAAM,CAAC,SAA6B,aAAlBR,EAAIY,WAA0BC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,cAAc,eAAe,CAACf,EAAIM,GAAG,cAAc,IAAI,MAC15DU,EAAkB,G,6CCmDP,SAAIC,OAAO,CACxBC,KADwB,WAEtB,MAAO,CACLT,WAAY,CACVC,MAAO,IACPC,OAAQ,KAEVQ,IAAK,KACLP,UAAW,WAGfQ,QAXwB,WAWjB,WACLnB,KAAKoB,UAAU,KAAMC,MAAK,SAACH,GACzB,EAAKA,IAAMA,EACX,EAAKJ,cAAc,UAAU,OAGjCQ,QAAS,CACPF,UADO,SACGG,GACR,IAAML,EAAM,IAAIM,MAChB,EAA0BxB,KAAKQ,WAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAKf,OAJAQ,EAAIK,IAAMA,EACVL,EAAIT,MAAQA,EACZS,EAAIR,OAASA,EACbQ,EAAIO,YAAc,OACX,IAAIC,SAA0B,SAACC,EAASC,GAC7CV,EAAIW,OAAS,kBAAMF,EAAQT,IAC3BA,EAAIY,QAAUF,MAIlBd,cAdO,SAcOH,GAAoC,IAAboB,EAAa,wDACxCb,EAAQlB,KAARkB,IACR,GAAKa,GACC/B,KAAKW,YAAcA,EADzB,CAKAX,KAAKW,UAAYA,EACjB,IAAMqB,EAAShC,KAAKiC,MAAMD,OAC1B,GAAKd,EAGL,OAAQP,GACN,IAAK,SACHX,KAAKkC,cAAcF,EAAQd,GAC3B,MACF,IAAK,SACHlB,KAAKmC,cAAcH,EAAQd,GAC3B,MACF,IAAK,SACHlB,KAAKoC,cAAcJ,EAAQd,GAC3B,MACF,IAAK,YACHlB,KAAKqC,iBAAiBL,EAAQd,GAC9B,MACF,IAAK,YACHlB,KAAKsC,qBAAqBN,EAAQd,EAAK,GACvC,MACF,IAAK,cACHlB,KAAKsC,qBAAqBN,EAAQd,EAAK,GACvC,MACF,IAAK,aACHlB,KAAKsC,qBAAqBN,EAAQd,EAAK,GACvC,MACF,IAAK,UACHlB,KAAKuC,qBAAqBP,EAAQd,EAAK,GACvC,MACF,IAAK,YACHlB,KAAKuC,qBAAqBP,EAAQd,EAAK,GACvC,MACF,IAAK,WACHlB,KAAKuC,qBAAqBP,EAAQd,EAAK,GACvC,MACF,QACE,SAINgB,cA9DO,SA8DOF,EAA2Bd,GACvC,IAAMsB,EAAMR,EAAOS,WAAW,MAC1BD,GACFA,EAAIE,UAAUxB,EAAK,EAAG,EAAGc,EAAOvB,MAAOuB,EAAOtB,SAIlDyB,cArEO,SAqEOH,EAA2Bd,GACvC,IAAMsB,EAAMR,EAAOS,WAAW,MAC9B,GAAID,EAAK,CACPA,EAAIE,UAAUxB,EAAK,EAAG,EAAGc,EAAOvB,MAAOuB,EAAOtB,QAC9C,IAAMiC,EAAYH,EAAII,aAAa,EAAG,EAAGZ,EAAOvB,MAAOuB,EAAOtB,QACxDmC,EAAMF,EAAU1B,KAAK6B,OACvBC,EAAa,EACjB,MAAOA,GAAcF,EAAK,CACxB,IAAMG,EAAML,EAAU1B,KAAK8B,GACrBE,EAAQN,EAAU1B,KAAK8B,EAAa,GACpCG,EAAOP,EAAU1B,KAAK8B,EAAa,GACnCI,EAAQR,EAAU1B,KAAK8B,EAAa,GAC1CJ,EAAU1B,KAAK8B,KAAgB,IAAMC,EACrCL,EAAU1B,KAAK8B,KAAgB,IAAME,EACrCN,EAAU1B,KAAK8B,KAAgB,IAAMG,EACrCP,EAAU1B,KAAK8B,KAAgBI,EAEjCX,EAAIY,aAAaT,EAAW,EAAG,KAInCP,cA1FO,SA0FOJ,EAA2Bd,GACvC,IAAMsB,EAAMR,EAAOS,WAAW,MAC9B,GAAID,EAAK,CACPA,EAAIE,UAAUxB,EAAK,EAAG,EAAGc,EAAOvB,MAAOuB,EAAOtB,QAC9C,IAAMiC,EAAYH,EAAII,aAAa,EAAG,EAAGZ,EAAOvB,MAAOuB,EAAOtB,QACxDmC,EAAMF,EAAU1B,KAAK6B,OACvBC,EAAa,EACjB,MAAOA,GAAcF,EAAK,CACxB,IAAMG,EAAML,EAAU1B,KAAK8B,GACrBE,EAAQN,EAAU1B,KAAK8B,EAAa,GACpCG,EAAOP,EAAU1B,KAAK8B,EAAa,GACnCI,EAAQR,EAAU1B,KAAK8B,EAAa,GAC1CJ,EAAU1B,KAAK8B,KAAgBM,KAAKC,MAAM,KAAQN,EAAM,KAAQC,EAAQ,KAAQC,GAChFP,EAAU1B,KAAK8B,KAAgBM,KAAKC,MAAM,KAAQN,EAAM,KAAQC,EAAQ,KAAQC,GAChFP,EAAU1B,KAAK8B,KAAgBM,KAAKC,MAAM,KAAQN,EAAM,KAAQC,EAAQ,KAAQC,GAChFP,EAAU1B,KAAK8B,KAAgBI,EAEjCX,EAAIY,aAAaT,EAAW,EAAG,KAInCN,iBA/GO,SA+GUL,EAA2Bd,GAC1C,IAAMsB,EAAMR,EAAOS,WAAW,MAC9B,GAAID,EAAK,CACPA,EAAIE,UAAUxB,EAAK,EAAG,EAAGc,EAAOvB,MAAOuB,EAAOtB,QAC9C,IAAMiC,EAAYH,EAAII,aAAa,EAAG,EAAGZ,EAAOvB,MAAOuB,EAAOtB,QACxDmC,EAAMF,EAAU1B,KAAK6B,OACvBC,EAAa,EACjB,MAAOA,GAAcF,EAAK,CACxB,IAAMG,EAAML,EAAU1B,KAAK8B,GACrBE,EAAQN,EAAU1B,KAAK8B,EAAa,GACpCG,EAAOP,EAAU1B,KAAK8B,EAAa,GACnCI,EAAQR,EAAU1B,KAAK8B,EAAa,GACpCQ,EAAMF,KAAKC,OAAON,EAAMC,EAAQC,GAAQ,GAC9CP,EAAU1B,KAAK8B,KAAgBQ,EAC/BZ,EAAU1B,KAAK8B,KAAgBQ,EAC/BZ,EAAU1B,KAAK8B,KAAgBQ,EAC/BZ,EAAU1B,KAAK8B,KAAgBI,EAEjCX,EAAIY,aAAaT,EAAW,EAAG,KAInCL,qBArIO,SAqIcN,EAA2Bd,EAAuBsC,GACrE,IAAMhB,EAAMR,EAAOS,WAAW,MAC9B,GAAID,EAAK,CACPA,EAAIE,UAAUxB,EAAK,EAAG,EAAGc,EAAOvB,MAAOuB,EAAOtB,QAC9C,IAAMiC,EAAYH,EAAII,aAAa,EAAG,EAAGZ,EAAOvB,MAAOuB,EAAOtB,QACxDmC,EAAMF,EAAU1B,KAAK6B,OACvBC,EAAa,EACjB,MAAOA,GAAcF,EACnBF,EAAU1B,KAAK8B,EAAaS,GAAW,EACvCT,GAAc,EAEhBP,EAAIY,aAAaT,EAAW,EAAG,KAInCJ,qBApJO,SAoJcP,EAA2Bd,EAAuBsC,GACrE,IAAMhB,EAAMR,EAAOS,WAAW,MAC9B,GAAID,EAAK,CACPA,EAAIE,UAAUxB,EAAK,EAAG,EAAGc,EAAOvB,MAAOuB,EAAOtB,QAC9C,IAAMiC,EAAYH,EAAII,aAAa,EAAG,EAAGZ,EAAOvB,MAAOuB,EAAOtB,QACxDmC,EAAMF,EAAU1B,KAAK6B,OACvBC,EAAa,EACjB,MAAOA,GAAcF,EAAK,CACxB,IAAIY,GAAS,EACbA,GAAS,EACLA,IAAUD,IACZb,EAAU1B,KAAK8B,EAAaU,GAAS,GAEvCA,GAAS,EACLA,IAAUD,IACZb,EAAU1B,KAAK8B,EAAaU,GAAS,GAEvCA,GAAS,EACLA,IAAUD,IACZb,EAAU1B,KAAK8B,EAAaU,GAAS,GAEvCV,GAAc,EAEhBP,EAAIY,aAAaT,EAAW,EAAG,QChP6a,I,wBCQhde,EAAY,eACd,EACA5D,EACAiB,GACA,EACA,KACA,WACA,MAIa,aAAA2C,E,gCCnBfC,EAAOC,QAAU,IAA0B,0B","file":"js/chunk-297b6717.1966b70a.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chapterC03P02.vue?vue&type=style&index=0&id=37506a8e&scoped=true&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',[_vm._v(\"canvas - 图片处理\")]),_c('canvas',{ref:\"canvas\",attrs:{\"width\":_vm.canvasSize.width,\"height\":_vm.canvasSize.height}}),_c('h3',[_vm._v(\"色彩处理\")]),_c('div',[_c('q-button-group',[_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'origin'},on:{\"click\":function($event){return _vm.onSwitchColor('origin')}}},[_vm._v(\"原图\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'invert'},on:{\"click\":function($event){return _vm.onSwitchColor('invert')}}},[_vm._v(\"反色\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'pseudo'},on:{\"click\":function($event){return _vm.onSwitchColor('pseudo')}}},[_vm._v(\"伪彩\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'grayscale'},on:{\"click\":function($event){return _vm.onSwitchColor('grayscale')}}},[_vm._v(\"灰度\")])],1)],1),_c('h3',[_vm._v(\"滤镜处理\")]),_c('div',[_c('div',[_vm._v(\"双通道\")]),_c('q-button-group',[_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'removeRed'},on:{\"click\":function($event){return _vm.onSwitchColor('removeRed')}}},[_vm._v(\"去除红色通道\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'removeGreen'},on:{\"click\":function($event){return _vm.onSwitchColor('removeGreen')}}},[_vm._v(\"去除绿色通道\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'removeBlue'},on:{\"click\":function($event){return _vm.onSwitchColor('removeBlue')}}},[_vm._v(\"去除蓝色通道\")])],1),_c('div',[_vm._v(\"单通道\")]),_c('q-button-group',[_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'onlyRed'},on:{\"click\":function($event){return _vm.onSwitchColor('onlyRed')}}},[_vm._v(\"仅保留红色通道\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'onlyGreen'},on:{\"click\":function($event){return _vm.onSwitchColor('onlyGreen')}}},[_vm._v(\"仅保留绿色通道\")]),_c('q-button',{attrs:{\"disabled\":_vm.colorType === 'onlyBlue'},on:{\"click\":function($event){return _vm.onSwitchColor('onlyBlue')}}},[_vm._v(\"仅保留蓝色通道\")])],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable no-plusplus */\nimport Vue from 'vue';\nimport lena from './assets/lena.jpeg';\n\ntype ColorTypes = 'origin' |\n  'invert' |\n  'pseudo' |\n  'grayscale' |\n  'removeRed' |\n  'removeGreen' |\n  'removeBlue' |\n  'onlyRed' |\n  'onlyGreen' |\n  'onlyBlue'\n\nexport default Vue.extend({\n  data() {\n    return {\n      canvasSize: {\n        width: 400,\n        height: 400,\n      },\n      img: null as HTMLImageElement | null,\n      colorType: 'origin' as ColorTypes,\n    };\n  },\n  mounted() {\n    this.loadImage(lena).then((img) => {\n      this.img = img;\n      this.onSwitchColor('origin', true);\n    });\n  },\n  methods: {\n    loadImage(src: string) {\n      const img = new Image();\n      const { width, height } = this.canvasSize;\n      img.src = src;\n      img.width = width;\n      img.height = height;\n      img.crossOrigin = 'cors';\n      return new Promise<HTMLImageElement>((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = reject;\n      });\n    },\n\n    onSwitchColor(colorType: ColorTypes, force = false) {\n      const { img } = this;\n      if (!force) {\n        if (this.colorType === colorType) {\n          return;\n        }\n      }\n      this.colorType = colorType;\n      const canvas = this.$refs.canvas as HTMLCanvasElement;\n      if (!img) {\n        return;\n      }\n      switch (colorType) {\n        case 'origin':\n          this.drawOriginImg(canvas, img);\n          break;\n        case 'invert':\n          this.drawInvertImg(canvas, img);\n          break;\n        case 'pseudo':\n          this.drawPseudoImg(canvas, img);\n          break;\n        case 'grayscale':\n          this.drawGrayscaleImg(canvas, img);\n          break;\n        case 'removeRed':\n          this.drawDoubleChannelImg(canvas, img, 0);\n          break;\n        case 'removeGreen':\n          this.drawDoubleChannelImg(canvas, img, 1);\n          break;\n        case 'removeBlue':\n          this.drawDoubleChannelImg(canvas, img, 2);\n          break;\n        case 'onlyRed':\n          this.drawSingleChannelImg(canvas, img, 0);\n          break;\n        case 'onlyGreen':\n          this.drawSingleChannelImg(canvas, img, 1);\n          break;\n        case 'onlyBlue':\n          this.drawSingleChannelImg(canvas, img, 2);\n          break;\n        default:\n          break;\n      }\n    },\n\n    drawOriginImg(canvas: HTMLCanvasElement, img: HTMLImageElement) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n      }\n    },\n\n    drawInvertImg(canvas: HTMLCanvasElement, img: HTMLImageElement) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const len = imageData.data.length;\n        let pointIndex = 0;\n        while (pointIndex <= len) {\n          const red = imageData.data[pointIndex];\n          const green = imageData.data[pointIndex + 1];\n          const blue = imageData.data[pointIndex + 2];\n          const alpha = imageData.data[pointIndex + 3];\n          imageData.data[pointIndex++] = 255 - red;\n          imageData.data[pointIndex++] = 255 - green;\n          imageData.data[pointIndex++] = 255 - blue;\n          imageData.data[pointIndex++] = alpha;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      }\n    },\n\n    drawPseudoImg(canvas: HTMLCanvasElement, img: HTMLImageElement) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const len = imageData.data.length;\n        let pointIndex = 0;\n        while (pointIndex <= len) {\n          const red = imageData.data[pointIndex];\n          const green = imageData.data[pointIndex + 1];\n          const blue = imageData.data[pointIndex + 2];\n          const alpha = imageData.data[pointIndex + 3];\n          imageData.data[pointIndex++] = Math.round(0.393 * red + 0.769 * green + 0.189 * blue);\n          imageData.data[pointIndex++] = Math.round(0.349 * red + 0.686 * green + 0.168 * blue);\n          imageData.data[pointIndex++] = Math.round(0.272 * red + 0.534 * green + 0.131 * blue);\n          imageData.data[pointIndex++] = alpha;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      }\n    },\n\n    drawGrayscaleImg(canvas: HTMLCanvasElement, img: HTMLImageElement) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const len = imageData.data.length;\n        let pointIndex = 0;\n        while (pointIndex <= len) {\n          const red = imageData.data[pointIndex];\n          const green = imageData.data[pointIndex + 1];\n          const blue = imageData.data[pointIndex + 2];\n          const alpha = imageData.data[pointIndex + 3];\n          const avg = Math.round((red + green + blue) / 3);\n          imageData.data[pointIndex++] = avg;\n          imageData.data[pointIndex++] = avg;\n          imageData.data[pointIndex++] = avg;\n          imageData.data[pointIndex++] = alpha;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      }\n    },\n\n    drawDoubleChannelImg(canvas: HTMLCanvasElement, img: HTMLImageElement, channel: number) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const len = imageData.data.length;\n        let pointIndex = 0;\n        while (pointIndex <= len) {\n          imageData.data[pointIndex + channel] = 0;\n          pointIndex += 4;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      }\n    },\n\n    drawSingleChannelImg(canvas: HTMLCanvasElement, img: HTMLImageElement, channel: number) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const len = imageData.data.length;\n        let pointIndex = 0;\n        while (pointIndex <= len) {\n          let index = -1;\n          index += 1;\n          if (index !== channel) {\n            imageData.data[pointIndex + index] = 0;\n          }\n          index += 1;\n          if (index !== channel) {\n            imageData.data[pointIndex + index] = 0;\n          }\n          index += 1;\n          if (index !== channel) {\n            imageData.data[pointIndex + index] = 0;\n          }\n          pointIndex += 4;\n        }\n        ctx.putImageData(imageData, 0, 0);\n      }\n    },\n  },\n});\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chapterC03P02.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--14-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./chapterC03P02.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./chapterC03P02.vue?vue&type=template&id=37506a8e&scoped=true&\"\nimport script from \"./chapterC03P02.vue?vue&type=script&lang=ts&\"\nexport * from \"./chapterC03P02.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./chapterC03P02.vue?vue&type=style&index=0&id=37506a8e&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"37506a8e\",\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/lena.be661704.jpeg\";"],"sourceRoot":""}