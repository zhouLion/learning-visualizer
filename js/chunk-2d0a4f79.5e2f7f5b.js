(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a4f79"],{"0960":function(s,a,n){"use strict";n.r(a),a["default"]='<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>法向材质（MeshNormalMaterial）<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这不是真实世界的材质。通常使用该材质进行调试，因为它为每个平面分配随机的颜色，便于调试时候观察具体的平面。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;400&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>&gt;</span>相机机位：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;c4-4_camera_x&quot;</span>&gt;</span>\n          x：\n          <span class="hljs-tag">&lt;<span class="hljs-name">input</span>\n            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c4-4_camera_x&quot;</span>\n            <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;1&quot;</span>\n            <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;25&quot;</span>\n            <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cameraPosition.x&quot;</span>\n            @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;changeCameraPosition&quot;</span>\n          /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;c4-4_camera_y&quot;</span>&gt;</span>\n          y：\n          <span class="hljs-tag">&lt;<span class="hljs-name">input</span>\n            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c4-4_camera_y&quot;</span>\n            <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;1&quot;</span>\n            <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;25&quot;</span>\n            <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cameraPosition.y&quot;</span>\n            @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;changeCameraPosition&quot;</span>\n          /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;c4-4_camera_z&quot;</span>&gt;</span>\n          z：\n          <span class="hljs-tag">&lt;<span class="hljs-name">input</span>\n            <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span>\n            <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;c4-4_camera_z&quot;</span>\n            <span class="hljs-attr">:min</span>=<span class="hljs-string">&quot;1&quot;</span>\n            <span class="hljs-attr">:max</span>=<span class="hljs-string">&quot;25&quot;</span>\n            <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;cameraPosition.z&quot;</span>\n            @<span class="hljs-attr">input</span>=<span class="hljs-string">&quot;changeCameraPosition&quot;</span>\n          /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">Web</span>GLRenderer,\n  <span class="hljs-title class_">Scene</span>,\n  <span class="hljs-title class_">OrthographicCamera</span>,\n  <span class="hljs-title class_">Vector</span>3,\n  <span class="hljs-title class_">PointLight</span>,\n  <span class="hljs-title class_">Mesh</span>,\n  <span class="hljs-title class_">MeshNormalMaterial</span>,\n  <span class="hljs-title class_">BoxGeometry</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;three&#x27;</span>;\n<span class="hljs-keyword">import</span> { startAnimationFrame } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./utils/engine&#x27;</span>;\n<span class="hljs-keyword">import</span> { createBaseData } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./utils/base-item&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>({\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      ...<span class="hljs-title function_">createBaseData</span>(),\n      <span class="hljs-attr">cameraPosition</span>: {\n        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,\n        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,\n        <span class="hljs-attr">z</span>: <span class="hljs-number">0</span>,\n      },\n    };\n  },\n\n  <span class="hljs-attr">methods</span>: {\n    <span class="hljs-title function_">changeCameraPosition</span>(<span class="hljs-params"></span>) {\n      <span class="hljs-keyword">const</span> { camera, cameraPosition } = <span class="hljs-variable language_">this</span>;\n      <span class="hljs-keyword">const</span> { x, y, z } = cameraPosition;\n      <span class="hljs-comment">// camera.lookAt(new Vector3(x, y, z));</span>\n      camera.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(x, y, z);\n    },\n  },\n\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> { camera, scene } = <span class="hljs-variable language_">this</span>;\n    <span class="hljs-keyword">const</span> renderer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Web</span>GLRenderer({\n      <span class="hljs-attr">canvas</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">canvas</span> <span class="hljs-keyword">as</span> HTMLCanvasElement,\n    });\n    renderer.<span class="hljs-title function_">setClearColor</span>(<span class="hljs-number">0x000000</span>);\n\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">changeCameraPosition</span>();\n    camera.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(<span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>);\n    camera.<span class="hljs-title function_">lookAt</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Vector</span>3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>));\n    scene.<span class="hljs-title function_">add</span>(camera);\n\n    <span class="hljs-keyword">const</span> light = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PointLight</span>(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">1</span>, <span class="hljs-number">100</span>);\n    light.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>);\n    scene.<span class="hljs-title function_">add</span>(light);\n\n    <span class="hljs-comment">// 法向材质（MeshNormalMaterial）</span>\n    <span class="hljs-keyword">const</span> material = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MeshNormalMaterial</span>();\n\n    <span class="hljs-keyword">const</span> cube = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mesh</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BoxGeometry</span>(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>), material);\n    scene.<span class="hljs-title function_">add</span>(cube);\n\n    <span class="hljs-title function_">startAnimationFrame</span>(renderer, scene, camera);\n  },\n});\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n'}}]);
//# sourceMappingURL=chunk-2d0a4f79.5e2f7f5b.js.map