(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b34da"],{2897:function(s,a,n){"use strict";n.r(a),a["default"]='<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span>&gt;</span>纹理贴图材质<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>导入图片作为纹理贴图。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;400&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">\n<span class="hljs-keyword">import</span> <span class="hljs-title class_">Vue</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">Web</span>GLRenderer,\n  <span class="hljs-title class_">Scene</span>,\n  <span class="hljs-title class_">OrthographicCamera</span>,\n  <span class="hljs-title class_">Vector</span>3,\n  <span class="hljs-title class_">PointLight</span>,\n  <span class="hljs-title class_">Mesh</span>,\n  <span class="hljs-title class_">BoxGeometry</span>,\n  <span class="hljs-title class_">SphereGeometry</span>,\n  <span class="hljs-title class_">TextureLoader</span>,\n  <span class="hljs-title class_">MeshLambertMaterial</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;three&#x27;</span>;\n<span class="hljs-keyword">import</span> { createBaseData } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./utils/base-item&#x27;</span>;\n<span class="hljs-keyword">import</span> { getRelativePath } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/utils/register-components&#x27;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">Vue</span>.<span class="hljs-title function_">extend</span>({\n  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">return</span> {\n      ...<span class="hljs-title function_">createBaseData</span>(),\n      <span class="hljs-attr">cameraPosition</span>: {\n        <span class="hljs-attr">x</span>: <span class="hljs-number">0</span>,\n        <span class="hljs-attr">y</span>: <span class="hljs-number">0</span>,\n        <span class="hljs-attr">z</span>: <span class="hljs-number">0</span>,\n      },\n    };\n  },\n\n  <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> { camera, scene } = <span class="hljs-variable language_">this</span>;\n    <span class="hljs-keyword">const</span> renderer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Web</span>GLRenderer({\n      <span class="hljs-attr">canvas</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">canvas</span> <span class="hljs-keyword">as</span> HTMLCanvasElement,\n    });\n    renderer.<span class="hljs-title function_">setClearColor</span>(<span class="hljs-number">0x00ff00</span>);\n\n    camera.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(<span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>);\n    camera.<span class="hljs-title function_">lookAt</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Vector</span>3(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>));\n    scene.<span class="hljs-title function_">add</span>(camera);\n\n    <span class="hljs-keyword">const</span> light = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PointLight</span>(<span class="hljs-number">0xffffff</span>, <span class="hljs-number">1</span>, <span class="hljs-number">100</span>);\n    light.<span class="hljs-property">position</span>.<span class="hljs-title function_">set</span>(<span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>);\n    scene.<span class="hljs-title function_">add</span>(light);\n\n    <span class="hljs-keyword">const</span> textureLoader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextureLoader</span>();\n\n    textureLoader.<span class="hljs-title function_">load</span>(<span class="hljs-title function_">getRelativePath</span>(<span class="hljs-string">&#x27;/img/three/chess.png&#x27;</span>), <span class="hljs-function">(<span class="hljs-params">texture</span>) =&gt;</span> {\n      <span class="hljs-keyword">const</span> material = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MeshLambertMaterial</span>({\n        <span class="hljs-attr">map</span>: texture,\n      });\n\n      <span class="hljs-keyword">const</span> cube = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Mesh</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">BoxGeometry</span>(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>), material);\n      scene.<span class="hljs-title function_">add</span>(cube);\n\n      <span class="hljs-comment">// const sphere = new Mesh(new SphereGeometry(4, 10, 10), material);</span>\n      <span class="hljs-comment">// scene.add(sphere);</span>\n\n      renderer.<span class="hljs-title function_">render</span>(scene, camera);\n    });\n  },\n});\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n'}}]);
//# sourceMappingURL=chunk-2d0b34da.8b81227b.js.map