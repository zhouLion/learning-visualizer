{"version":3,"sources":["webpack:///./src/views/articles/canvas/chapterC02P07.vue"],"names":[],"mappings":"gHAAA,OAAe","file":"js/chunk-2d2218c0.4f8e9e81.js","sourcesContent":["export default \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">div</span> <span class=\\\"hljs-attr\\\">class</span>=<span class=\\\"hljs-string\\\">&quot;demo-restore&quot;</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h2</span>&gt;</span>学习 Canvas: 制作扇形图和饼图<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h2</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>扇形图思路<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n      输入：\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>center<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>、\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>radius<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>、\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>startDeg<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>和\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>endDeg<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>。\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span>&gt;</span>结果输出一个扇形图形<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">canvas</span> <span class=\\\"hljs-attr\\\">width</span>=<span class=\\\"hljs-string\\\">&quot;400&quot;</span> <span class=\\\"hljs-attr\\\">height</span>=<span class=\\\"hljs-string\\\">&quot;400&quot;</span> <span class=\\\"hljs-attr\\\">ref</span>=<span class=\\\"hljs-string\\\">&quot;arcCanvas&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">canvas</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">hr</span> /&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">h3</span>&gt;</span>饼图思路：<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">h3</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n      输入的\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>startDeg<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>和\\n      <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">code</span>&gt;</span>endDeg<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">code</span>&gt;</span>两个数组，基于扇形图思路，执行函数的循环调用。\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">p</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">canvas</span> <span class=\\\"hljs-attr\\\">width</span>=<span class=\\\"hljs-string\\\">&quot;400&quot;</span> <span class=\\\"hljs-attr\\\">height</span>=<span class=\\\"hljs-string\\\">&quot;400&quot;</span> <span class=\\\"hljs-attr\\\">ref</span>=<span class=\\\"hljs-string\\\">&quot;pieCanvas&quot;</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">canvas</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">template</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-name\\\">script</span> <span class=\\\"hljs-attr\\\">lang</span>=<span class=\\\"hljs-string\\\">&quot;ts&quot;</span>&gt;</span><span class=\\\"language-javascript\\\">\\n<span class=\\\"hljs-comment\\\">/* eslint-disable no-param-reassign */</span>\\n<span class=\\\"hljs-keyword\\\">import</span> <span class=\\\"hljs-title class_\\\">Vue</span> <span class=\\\"hljs-keyword\\\">from</span> <span class=\\\"hljs-string\\\">&#x27;vue&#x27;</span>;\\n\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">default</span> <span class=\\\"hljs-title class_\\\">Vue</span>.<span class=\\\"hljs-title function_\\\">extend</span>({\\n  <span class=\\\"hljs-title function_\\\">data</span>(<span class=\\\"hljs-params\\\"></span>) {\\n    <span class=\\\"hljs-keyword\\\">return</span> {\\n      <span class=\\\"hljs-attr\\\">arcCanvas</span>: <span class=\\\"hljs-literal\\\">null</span> <span class=\\\"hljs-keyword\\\">as</span> HTMLCanvasElement | <span class=\\\"hljs-literal\\\">null</span>,\\n      <span class=\\\"hljs-attr\\\">arcCtx</span>: <span class=\\\"hljs-literal\\\">null</span> <span class=\\\"hljs-keyword\\\">as</span> <span class=\\\"hljs-title class_\\\">CanvasRenderingContext</span>2D | <span class=\\\"hljs-literal\\\">null</span>,\\n      <span class=\\\"hljs-attr\\\">pieCanvas</span>: <span class=\\\"hljs-literal\\\">null</span> <span class=\\\"hljs-keyword\\\">as</span> HTMLCanvasElement | <span class=\\\"hljs-literal\\\">null</span>,\\n      <span class=\\\"hljs-attr\\\">pieCtx</span>: <span class=\\\"hljs-literal\\\">null</span> <span class=\\\"hljs-keyword\\\">as</span> <span class=\\\"hljs-title class_\\\">CanvasRenderingContext</span>2D | <span class=\\\"hljs-literal\\\">null</span>,\\n    };\\n  },\\n  <span class=\\\"hljs-title function_\\\">mounted</span>(<span class=\\\"hljs-params\\\"></span>) {\\n    <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">initCanvases</span>();\\n    <span class=\\\"hljs-comment\\\">// eslint-disable-next-line no-unused-expressions</span>\\n    <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">arcCtx</span> &amp;&amp; <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawArc</span>(<span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">arcCtx</span>, [<span class=\\\"hljs-number\\\">200</span>, <span class=\\\"hljs-number\\\">200</span>], <span class=\\\"hljs-number\\\">100</span>, <span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">190</span>);\\n    <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawPie</span>([<span class=\\\"hljs-number\\\">200</span>, <span class=\\\"hljs-number\\\">200</span>], <span class=\\\"hljs-number\\\">100</span>, [<span class=\\\"hljs-number\\\">30</span>, <span class=\\\"hljs-number\\\">60</span>, <span class=\\\"hljs-number\\\">90</span>], [<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">90</span>, <span class=\\\"hljs-number\\\">180</span>]);\\n  },\\n  <span class=\\\"hljs-attr\\\">methods</span>: {\\n    <span class=\\\"hljs-title function_\\\">initCanvases</span>(<span class=\\\"hljs-params\\\"></span>) {\\n      <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">$refs</span>.<span class=\\\"hljs-property\\\">arcCanvas</span>) {\\n        <span class=\\\"hljs-keyword\\\">const</span> { <span class=\\\"hljs-attr\\\">canvas</span>: arcCanvas, <span class=\\\"hljs-attr\\\">ctx</span>: arcCtx } = <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">getCanvasAndContext</span>(<span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">$refs</span>.<span class=\\\"hljs-property\\\">arcCanvas</span> <span class=\\\"hljs-keyword\\\">as</span> HTMLCanvasElement);\\n        <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">arcCanvas</span> = arcCanvas;\\n        <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">arcCtx</span> = arcCtx;\\n      }\\n      <span class=\\\"hljs-keyword\\\">if</span> (<span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">$refs</span>.<span class=\\\"hljs-property\\\">pieCanvas</span>) {\\n        <span class=\\\"hljs-keyword\\\">const</span> { <span class=\\\"hljs-attr\\\">canvas</span>: pieCanvas, <span class=\\\"hljs-attr\\\">ctx</span>: pieCtx } = <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">getCanvasAndContext</span>(<span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">$refs</span>.<span class=\\\"hljs-property\\\">pieCanvas</span> <span class=\\\"hljs-keyword\\\">as</span> HTMLCanvasElement);\\n        <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">pieCanvas</span> = pieCanvas;\\n        <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">pieCtx</span> = pieCtx;\\n      }\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">getCanvasAndContext</span>(<span class=\\\"hljs-params\\\">canvas: HTMLCanvasElement</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = canvas.<span class=\\\"hljs-title function_\\\">getContext</span>(<span class=\\\"hljs-string\\\">&#x27;2d&#x27;</span>);\\n      <span class=\\\"hljs-keyword\\\">if</span> (!ctx) {\\n        <span class=\\\"hljs-keyword\\\">throw</span> <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-title class_\\\">Error</span>(<span class=\\\"hljs-string\\\">&#x27;浏览器太非主流了吧&#x27;</span>);\\n      }\\n      <span class=\\\"hljs-keyword\\\">return</span> { canvas, ctx };\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawArc</span>(<span class=\\\"hljs-params\\\">ctx: CanvasRenderingContext2D, center: number[], radius: number, startDeg: number, endDeg: number</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> [x, y] = center;\\n      ctx.<span class=\\\"hljs-title function_\\\">beginPath</span>();\\n      ctx.<span class=\\\"hljs-title function_\\\">moveTo</span>(x, y);\\n      ctx.<span class=\\\"hljs-title function_\\\">arc</span>(x, y, radius, startDeg, endDeg);\\n      ctx.<span class=\\\"hljs-title function_\\\">closePath</span>();\\n      ctx.<span class=\\\"hljs-property\\\">strokeStyle</span> = <span class=\\\"hljs-string\\\">&#x27;#000&#x27;</span>;\\n      ctx.<span class=\\\"hljs-title function_\\\">stroke</span>();\\n    },\\n\\n    <span class=\\\"hljs-title function_\\\">drawPie</span>(<span class=\\\"hljs-params\\\">center: number[], radius: number, startDeg: number[], endDeg: number[]</span>) {\\n      <span class=\\\"hljs-keyword\\\">const</span> [x, y] = center;\\n      <span class=\\\"hljs-keyword\\\">const</span> ctx = <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-property\\\">pieCtx</span>;\\n      <span class=\\\"hljs-keyword\\\">if</span> (!ctx) {\\n        <span class=\\\"hljs-keyword\\\">return</span>;\\n      }\\n      ctx.<span class=\\\"hljs-title function_\\\">clearRect</span>(<span class=\\\"hljs-number\\\">0</span>, <span class=\\\"hljs-number\\\">0</span>, x * <span class=\\\"hljs-number\\\">2</span>, y * <span class=\\\"hljs-number\\\">2</span>);\\n      <span class=\\\"hljs-comment\\\">// eslint-disable-next-line no-plusplus</span>\\n      <span class=\\\"hljs-keyword\\\">for</span> (<span class=\\\"hljs-keyword\\\">let</span> i = <span class=\\\"hljs-number\\\">0</span>; i &lt; startDeg.<span class=\\\"hljs-property\\\">length</span>; i++) {\\n        <span class=\\\"hljs-variable language_\\\">this</span>.<span class=\\\"hljs-title function_\\\">drawArc</span>(ctx, center, radius, startDeg[i], endDeg[i]);\\n      }\\n    },\\n  },\\n});\\n</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-name\\\">script</span>&gt;</span>\\n\""],"sourceRoot":""}